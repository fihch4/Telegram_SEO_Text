#!/usr/bin/python3.8
# -*- coding: utf-8 -*-
import config
import telebot
from telebot import types
from scrape_urls import get_lemmas_from_url, get_lemmas_from_list
from excel import write_keys_to_xlsx

list_domains = ""

bot = telebot.TeleBot(config.token)


@bot.message_handler(commands=['start'])
def get_text_messages(message):
    print(message.from_user.id)
    print(message.text)
    start_menu = types.ReplyKeyboardMarkup(True)
    start_menu.row('üñäÔ∏è –°–æ—Å—Ç–∞–≤–∏—Ç—å SEO-–¢–ó')
    bot.send_message(message.chat.id, '–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é', reply_markup=start_menu)


@bot.message_handler(content_types=['text'])
def handle_text(message):
    user_id = message.chat.id
    if message.text == 'üñäÔ∏è –°–æ—Å—Ç–∞–≤–∏—Ç—å SEO-–¢–ó':
        print(f"–í —Ä–∞–∑–¥–µ–ª–µ –°–û–°–¢–ê–í–ò–¢–¨ SEO-–¢–ó:")
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ù–∞–∑–∞–¥')
        print(f"Message_chat_id: {message.chat.id} --- TEXT: {message.text}")
        bot.send_message(message.chat.id,
                         f"–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤. –ö–∞–∂–¥—ã–π –∫–ª—é—á –∏–ª–∏ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∫–ª—é—á–µ–π –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã —Å "
                         f"–Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.",
                         reply_markup=back_button, parse_mode="HTML")
        bot.register_next_step_handler(message, get_keys_from_user)

    if message.text == '–£–∫–∞–∑–∞—Ç—å URL —Ü–µ–ª–µ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞':
        print(message.chat.id)
        print(message.text)
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
        back_button.row('–ù–∞–∑–∞–¥')
        bot.send_message(message.chat.id, f"–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ URL –∞–¥—Ä–µ—Å —Ü–µ–ª–µ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ—Å—Ç–∞–≤–∏—Ç—å "
                                          f"–¢–ó.\n "
                                          f"–ï—Å–ª–∏ URL –∞–¥—Ä–µ—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'\n",
                         reply_markup=back_button, parse_mode="HTML")
        bot.register_next_step_handler(message, get_lemma_from_my_domain)

    elif message.text == '–£–∫–∞–∑–∞—Ç—å URL –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤':
        print("KONKYRENTY")

    elif message.text == '‚ùå –£–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç':
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ù–∞–∑–∞–¥')
        print(message.chat.id)
        print(message.text)
        domain_list = sql_select_domain(user_id)
        if len(domain_list) >= 1:
            bot.send_message(message.chat.id, text=
            f"–î–ª—è <b>—É–¥–∞–ª–µ–Ω–∏—è</b> —Å–∞–π—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –µ–≥–æ <b>ID</b> –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.\n"
            f"üëá–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤:üëá\n"
            f"{domain_list}\n"
            f"–£–∫–∞–∂–∏—Ç–µ ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", parse_mode="HTML",
                             reply_markup=back_button)
            bot.register_next_step_handler(message, delete_site_bd)
        else:
            bot.send_message(message.chat.id, f"–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –ø—É—Å—Ç üòü\n"
                                              f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –¥–æ–º–µ–Ω.")

    elif message.text == 'üñäÔ∏è –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å HASH robots':
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ù–∞–∑–∞–¥')
        print(message.chat.id)
        print(message.text)
        domain_list = sql_select_domain(user_id)
        if len(domain_list) >= 1:
            bot.send_message(message.chat.id, f"–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤:\n{domain_list}"
                                              f"\n–£–∫–∞–∂–∏—Ç–µ ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ robots",
                             reply_markup=back_button)
            bot.register_next_step_handler(message, rewrite_robots_hash)
        else:
            bot.send_message(message.chat.id, f"–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –ø—É—Å—Ç üòü\n"
                                              f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –¥–æ–º–µ–Ω.")

    if message.text == 'üëÄ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–£–∫–∞–∑–∞—Ç—å —É—Ä–ª –Ω–∞—à')
        back_button.row('–ù–∞–∑–∞–¥')

        bot.send_message(message.chat.id,
                         f"üëÆ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤, —à—Ç.: {col}\n"
                         f"üïí –°—Ä–µ–¥–Ω–∏–π UPTIME –ø–æ –≤—Å–µ–º –¥–æ–º–µ–Ω–∞–º: {uptime}\n"
                         f"üåê –ë–ª–∏–∂–∞–π—à–∏–π –æ—Å–≤–æ–±–æ–∂–¥–∞—é—â–∏–π—Å—è –¥–æ–º–µ–Ω: {domain_name}\n"
                         f"üìÖ –î–∞—Ç–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è: {date_expired_domain}\n"
                         f"üìÖ –î–Ω–µ–π –¥–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è: {difference_days}\n"
                         f"‚åõ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–æ–≤, –º–∏–Ω—É—Ç: 10\n"
                         f"‚òéÔ∏è–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è SMS-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {actual_telephone_user}\n",
                         reply_markup=back_button)
        # bot.register_next_step_handler(message, add_site_bd)
    elif message.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å':
        print(message.chat.id)
        print(message.text)
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ù–∞–∑–∞–¥')
        bot.send_message(message.chat.id, f"–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫ –≤–æ–ø—Ä–æ—Å "
                                          f"–∏–ª–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                                          f"–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.\n"
                                          f"–§–æ—Ä–º–∞—Ç –æ–±—Ä–∞—â–µ–Ω–∏—èüëá\n"
                                          f"<b>1Ô∏è‚É£ –í–∞—à–µ –∏–º—è:</b>\n"
                                          f"<b>2Ô∏è‚É£ –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ –∂–∞–ª–æ–±–∞:</b>",
                         reply_markup=back_button, parse_mode="HTML")
        # bot.register_next_step_handler(message, add_site_bd)
    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ –†–§)':
        print(message.chat.id)
        print(message.text)
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ù–∞–∑–∞–¥')
        bot.send_message(message.chat.id, f"–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>7XXXXXXXXXX</b>\n"
                                          f"üì± –ü—Ä–∏–º–µ—Ä –Ω–æ–º–µ—Ä–∞: <b>79647489485</b>\n"
                                          f"–¢—Ä–µ–±—É–µ–º–∞—è –¥–ª–∏–Ω–∞ –Ω–æ–º–µ—Ä–∞: 11 —Å–∏–º–≤–æ–ª–æ–≤\n"
                                          f"–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å <b>7</b>\n"
                                          f"‚úâÔ∏è –ù–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –±—É–¥—É—Ç –ø–æ—Å—Ç—É–ø–∞—Ç—å SMS-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–æ–≤.",
                         reply_markup=back_button, parse_mode="HTML")
        bot.register_next_step_handler(message, get_lemma_from_my_domain)
    elif message.text == '–ù–∞–∑–∞–¥':
        print(message.text)
        get_text_messages(message)


def get_keys_from_user(message):
    try:
        print("–ó–∞—à–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é: GET KEYS FROM USER")

        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–£–∫–∞–∑–∞—Ç—å URL —Ü–µ–ª–µ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞')
        back_button.row('–ù–∞–∑–∞–¥')
        user_id = message.from_user.id
        keys_from_user = message.text
        keys_from_user = str(keys_from_user).split('\n')
        bot.send_message(message.chat.id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ. –ò–¥–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ª–µ–º–º.")
        lemm_list_keys_from_user = get_lemmas_from_list(keys_from_user)
        write_keys_to_xlsx(lemm_list_keys_from_user)
        print(keys_from_user)
        print(f"USER ID: {user_id} ----- KEYS: {keys_from_user}")
        bot.send_message(message.from_user.id, f"–õ–µ–º–º—ã –≥–æ—Ç–æ–≤—ã. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å - –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.", reply_markup=back_button,
                         parse_mode="HTML")


    except Exception as e:
        print("ERROR: " + str(e))


def test_function(test):
    print("TERST" + str(test))


def delete_site_bd(message):
    try:
        if message.text == '–ù–∞–∑–∞–¥':
            get_text_messages(message)
        else:
            domain_id = message.text
            user_id = message.from_user.id
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞ {domain_id} –∏–∑ –ë–î")
            len_list_domain = check_domain_id_and_tg_id(domain_id, user_id)
            if int(len(len_list_domain)) >= 1:
                delete = delete_domain(domain_id, user_id)
                if delete == "Success":
                    bot.send_message(message.from_user.id, f"–î–æ–º–µ–Ω ID {domain_id} —É–¥–∞–ª–µ–Ω –∏–∑ –ë–î. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å /start")
            else:
                bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")
    except ValueError:
        bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")


def rewrite_robots_hash(message):
    try:
        if message.text == '–ù–∞–∑–∞–¥':
            get_text_messages(message)
        else:
            domain_id = message.text
            user_id = message.from_user.id
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å robots.txt –¥–ª—è –¥–æ–º–µ–Ω–∞ {domain_id}")
            len_list_domain = check_domain_id_and_tg_id(domain_id, user_id)
            len_list = len(len_list_domain)
            if len_list >= 1:
                print(len_list_domain)
                new_robots = new_robots_txt(len_list_domain, domain_id)
                if new_robots == 'Success':
                    print(f"ROBOTS.TXT –¥–ª—è –¥–æ–º–µ–Ω–∞: {len_list_domain} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω.")
                    bot.send_message(message.from_user.id,
                                     f"ROBOTS.TXT –¥–ª—è –¥–æ–º–µ–Ω–∞: {len_list_domain} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω.")
            else:
                bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")
    except ValueError:
        bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")


def get_lemma_from_my_domain(message):
    try:
        url_my_domain = message.text
        back_button = types.ReplyKeyboardMarkup(True, True)

        if 'http://' in url_my_domain or 'https://' in url_my_domain:
            back_button.row('–£–∫–∞–∑–∞—Ç—å URL –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤')
            back_button.row('–ù–∞–∑–∞–¥')
            bot.send_message(message.from_user.id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ. –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–µ–º–º.")
            lemmas = get_lemmas_from_url(url_my_domain)
            print(lemmas)
            print(f"URL MY DOMAIN: {url_my_domain}")
            print(f"USER_ID: {str(message.from_user.id)} ----- {message.text}")

            bot.send_message(message.from_user.id, f"–õ–µ–º–º—ã –¥–ª—è —Ü–µ–ª–µ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞ –≥–æ—Ç–æ–≤—ã.\n"
                                                   f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", reply_markup=back_button,
                             parse_mode="HTML")
        else:
            back_button.row('–ù–∞–∑–∞–¥')
            bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å. –£–ø—É—â–µ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª. –ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ /start",
                             reply_markup=back_button,
                             parse_mode="HTML")
            # bot.register_next_step_handler(message, test_function)
            # bot.send_message(message.chat.id,
            #                  f"–õ–µ–º–º—ã –≥–æ—Ç–æ–≤—ã. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
            #                  reply_markup=back_button, parse_mode="HTML")




    except ValueError:
        bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")


# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –æ–ø—Ä–æ—Å –±–æ—Ç–∞ –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ
bot.polling(none_stop=True, interval=0)
#
